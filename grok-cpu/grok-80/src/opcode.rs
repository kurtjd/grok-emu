use num_enum::FromPrimitive;

pub struct OpcodeInfo {
    pub name: &'static str,
    pub len: u8,
}

impl OpcodeInfo {
    fn new(name: &'static str, len: u8) -> Self {
        Self { name, len }
    }
}

#[derive(Copy, Clone, Debug, FromPrimitive)]
#[repr(u8)]
#[allow(non_camel_case_types)]
#[allow(clippy::upper_case_acronyms)]
pub enum Opcode {
    NOP,
    LXI_B,
    STAX_B,
    INX_B,
    INR_B,
    DCR_B,
    MVI_B,
    RLC,
    UNDEF_1,
    DAD_B,
    LDAX_B,
    DCX_B,
    INR_C,
    DCR_C,
    MVI_C,
    RRC,
    UNDEF_2,
    LXI_D,
    STAX_D,
    INX_D,
    INR_D,
    DCR_D,
    MVI_D,
    RAL,
    UNDEF_3,
    DAD_D,
    LDAX_D,
    DCX_D,
    INR_E,
    DCR_E,
    MVI_E,
    RAR,
    UNDEF_4,
    LXI_H,
    SHLD,
    INX_H,
    INR_H,
    DCR_H,
    MVI_H,
    DAA,
    UNDEF_5,
    DAD_H,
    LHLD,
    DCX_H,
    INR_L,
    DCR_L,
    MVI_L,
    CMA,
    UNDEF_6,
    LXI_SP,
    STA,
    INX_SP,
    INR_M,
    DCR_M,
    MVI_M,
    STC,
    UNDEF_7,
    DAD_SP,
    LDA,
    DCX_SP,
    INR_A,
    DCR_A,
    MVI_A,
    CMC,
    MOV_B_B,
    MOV_B_C,
    MOV_B_D,
    MOV_B_E,
    MOV_B_H,
    MOV_B_L,
    MOV_B_M,
    MOV_B_A,
    MOV_C_B,
    MOV_C_C,
    MOV_C_D,
    MOV_C_E,
    MOV_C_H,
    MOV_C_L,
    MOV_C_M,
    MOV_C_A,
    MOV_D_B,
    MOV_D_C,
    MOV_D_D,
    MOV_D_E,
    MOV_D_H,
    MOV_D_L,
    MOV_D_M,
    MOV_D_A,
    MOV_E_B,
    MOV_E_C,
    MOV_E_D,
    MOV_E_E,
    MOV_E_H,
    MOV_E_L,
    MOV_E_M,
    MOV_E_A,
    MOV_H_B,
    MOV_H_C,
    MOV_H_D,
    MOV_H_E,
    MOV_H_H,
    MOV_H_L,
    MOV_H_M,
    MOV_H_A,
    MOV_L_B,
    MOV_L_C,
    MOV_L_D,
    MOV_L_E,
    MOV_L_H,
    MOV_L_L,
    MOV_L_M,
    MOV_L_A,
    MOV_M_B,
    MOV_M_C,
    MOV_M_D,
    MOV_M_E,
    MOV_M_H,
    MOV_M_L,
    HLT,
    MOV_M_A,
    MOV_A_B,
    MOV_A_C,
    MOV_A_D,
    MOV_A_E,
    MOV_A_H,
    MOV_A_L,
    MOV_A_M,
    MOV_A_A,
    ADD_B,
    ADD_C,
    ADD_D,
    ADD_E,
    ADD_H,
    ADD_L,
    ADD_M,
    ADD_A,
    ADC_B,
    ADC_C,
    ADC_D,
    ADC_E,
    ADC_H,
    ADC_L,
    ADC_M,
    ADC_A,
    SUB_B,
    SUB_C,
    SUB_D,
    SUB_E,
    SUB_H,
    SUB_L,
    SUB_M,
    SUB_A,
    SBB_B,
    SBB_C,
    SBB_D,
    SBB_E,
    SBB_H,
    SBB_L,
    SBB_M,
    SBB_A,
    ANA_B,
    ANA_C,
    ANA_D,
    ANA_E,
    ANA_H,
    ANA_L,
    ANA_M,
    ANA_A,
    XRA_B,
    XRA_C,
    XRA_D,
    XRA_E,
    XRA_H,
    XRA_L,
    XRA_M,
    XRA_A,
    ORA_B,
    ORA_C,
    ORA_D,
    ORA_E,
    ORA_H,
    ORA_L,
    ORA_M,
    ORA_A,
    CMP_B,
    CMP_C,
    CMP_D,
    CMP_E,
    CMP_H,
    CMP_L,
    CMP_M,
    CMP_A,
    RNZ,
    POP_B,
    JNZ,
    JMP,
    CNZ,
    PUSH_B,
    ADI,
    RST_0,
    RZ,
    RET,
    JZ,
    UNDEF_8,
    CZ,
    CALL,
    ACI,
    RST_1,
    RNC,
    POP_D,
    JNC,
    OUTP,
    CNC,
    PUSH_D,
    SUI,
    RST_2,
    RC,
    UNDEF_9,
    JC,
    INP,
    CC,
    UNDEF_10,
    SBI,
    RST_3,
    RPO,
    POP_H,
    JPO,
    XTHL,
    CPO,
    PUSH_H,
    ANI,
    RST_4,
    RPE,
    PCHL,
    JPE,
    XCHG,
    CPE,
    UNDEF_11,
    XRI,
    RST_5,
    RP,
    POP_PSW,
    JP,
    DI,
    CP,
    PUSH_PSW,
    ORI,
    RST_6,
    RM,
    SPHL,
    JM,
    EI,
    CM,
    UNDEF_12,
    CPI,
    RST_7,
}

impl Opcode {
    pub fn info(&self) -> OpcodeInfo {
        match self {
            Opcode::NOP => OpcodeInfo::new("NOP", 1),
            Opcode::LXI_B => OpcodeInfo::new("LXI B,", 3),
            Opcode::STAX_B => OpcodeInfo::new("STAX B", 1),
            Opcode::INX_B => OpcodeInfo::new("INX B", 1),
            Opcode::INR_B => OpcodeInfo::new("INR B", 1),
            Opcode::DCR_B => OpcodeInfo::new("DCR B", 1),
            Opcode::MVI_B => OpcodeInfo::new("MVI B,", 2),
            Opcode::RLC => OpcodeInfo::new("RLC", 1),
            Opcode::UNDEF_1 => OpcodeInfo::new("UNDEF 1", 1),
            Opcode::DAD_B => OpcodeInfo::new("DAD B", 1),
            Opcode::LDAX_B => OpcodeInfo::new("LDAX B", 1),
            Opcode::DCX_B => OpcodeInfo::new("DCX B", 1),
            Opcode::INR_C => OpcodeInfo::new("INR C", 1),
            Opcode::DCR_C => OpcodeInfo::new("DCR C", 1),
            Opcode::MVI_C => OpcodeInfo::new("MVI C,", 2),
            Opcode::RRC => OpcodeInfo::new("RRC", 1),
            Opcode::UNDEF_2 => OpcodeInfo::new("UNDEF 2", 1),
            Opcode::LXI_D => OpcodeInfo::new("LXI D,", 3),
            Opcode::STAX_D => OpcodeInfo::new("STAX D", 1),
            Opcode::INX_D => OpcodeInfo::new("INX D", 1),
            Opcode::INR_D => OpcodeInfo::new("INR D", 1),
            Opcode::DCR_D => OpcodeInfo::new("DCR D", 1),
            Opcode::MVI_D => OpcodeInfo::new("MVI D,", 2),
            Opcode::RAL => OpcodeInfo::new("RAL", 1),
            Opcode::UNDEF_3 => OpcodeInfo::new("UNDEF 3", 1),
            Opcode::DAD_D => OpcodeInfo::new("DAD D", 1),
            Opcode::LDAX_D => OpcodeInfo::new("LDAX D", 1),
            Opcode::DCX_D => OpcodeInfo::new("DCX D", 1),
            Opcode::INR_E => OpcodeInfo::new("INR E", 1),
            Opcode::DCR_E => OpcodeInfo::new("DCR E", 1),
            Opcode::MVI_E => OpcodeInfo::new("MVI E,", 2),
            Opcode::RAR => OpcodeInfo::new("RAR", 1),
            Opcode::UNDEF_4 => OpcodeInfo::new("UNDEF 4", 1),
            Opcode::LXI_H => OpcodeInfo::new("LXI H,", 3),
            Opcode::SHLD => OpcodeInfo::new("SHLD", 3),
            Opcode::INX_H => OpcodeInfo::new("INX H", 1),
            Opcode::INR_H => OpcodeInfo::new("INR H", 1),
            Opcode::DCR_H => OpcodeInfo::new("DCR H", 1),
            Opcode::MVI_H => OpcodeInfo::new("MVI H,", 2),
            Opcode::DAA => OpcodeInfo::new("DAA", 1),
            Opcode::UNDEF_5 => OpcodeInfo::new("UNDEF 5", 1),
            Opcode::DAD_H => OpcodeInfo::new("DAD H", 1),
            Opcode::LHLD => OpcodeInfo::new("LHLD ", 3),
            Opcode::DCX_H => OpcodeInfo::new("DCX H", 1),
            Opcode::INR_L => OpcodeInfo::new("INR L", 1),
            Opcode::DCR_L => OpcodeInfo::new("DCR L", 1),
            Opcode::MVI_L => OpcodeInfo::new("MVI L,", 2),
            Opcode::CMA => OpcodeInfo::new("CMA", 1),
            Opcode::UNDEF_6 => OpcodeInfo::new("UNDEF 6", 1),
            Opcode::LXI_SP => OpcodeInfo::new("LXI SP,", 3),
            Opcode::STA => OpcodeInfo::new("STA ", 3),
            Opcode::INX_SP => OpcodeInfo::new("INX SP", 1),
            Opcode::INR_M => OpcodeInfo::new("INR M", 1),
            Opcode::DCR_M => OpcodeInfo::new("DCR M", 1),
            Opcode::MVI_M => OpcodeInfo::new("MVI M,", 2),
            Opcode::STC => OpcodeInfo::new("STC", 1),
            Opcode::UNDEF_7 => OpcodeInfo::new("UNDEF 7", 1),
            Opcode::DAD_SP => OpcodeInfo::new("DAD SP", 1),
            Opcode::LDA => OpcodeInfo::new("LDA ", 3),
            Opcode::DCX_SP => OpcodeInfo::new("DCX SP", 1),
            Opcode::INR_A => OpcodeInfo::new("INR A", 1),
            Opcode::DCR_A => OpcodeInfo::new("DCR A", 1),
            Opcode::MVI_A => OpcodeInfo::new("MVI A,", 2),
            Opcode::CMC => OpcodeInfo::new("CMC", 1),
            Opcode::MOV_B_B => OpcodeInfo::new("MOV B,B", 1),
            Opcode::MOV_B_C => OpcodeInfo::new("MOV B,C", 1),
            Opcode::MOV_B_D => OpcodeInfo::new("MOV B,D", 1),
            Opcode::MOV_B_E => OpcodeInfo::new("MOV B,E", 1),
            Opcode::MOV_B_H => OpcodeInfo::new("MOV B,H", 1),
            Opcode::MOV_B_L => OpcodeInfo::new("MOV B,L", 1),
            Opcode::MOV_B_M => OpcodeInfo::new("MOV B,M", 1),
            Opcode::MOV_B_A => OpcodeInfo::new("MOV B,A", 1),
            Opcode::MOV_C_B => OpcodeInfo::new("MOV C,B", 1),
            Opcode::MOV_C_C => OpcodeInfo::new("MOV C,C", 1),
            Opcode::MOV_C_D => OpcodeInfo::new("MOV C,D", 1),
            Opcode::MOV_C_E => OpcodeInfo::new("MOV C,E", 1),
            Opcode::MOV_C_H => OpcodeInfo::new("MOV C,H", 1),
            Opcode::MOV_C_L => OpcodeInfo::new("MOV C,L", 1),
            Opcode::MOV_C_M => OpcodeInfo::new("MOV C,M", 1),
            Opcode::MOV_C_A => OpcodeInfo::new("MOV C,A", 1),
            Opcode::MOV_D_B => OpcodeInfo::new("MOV D,B", 1),
            Opcode::MOV_D_C => OpcodeInfo::new("MOV D,C", 1),
            Opcode::MOV_D_D => OpcodeInfo::new("MOV D,D", 1),
            Opcode::MOV_D_E => OpcodeInfo::new("MOV D,E", 1),
            Opcode::MOV_D_H => OpcodeInfo::new("MOV D,H", 1),
            Opcode::MOV_D_L => OpcodeInfo::new("MOV D,L", 1),
            Opcode::MOV_D_M => OpcodeInfo::new("MOV D,M", 1),
            Opcode::MOV_D_A => OpcodeInfo::new("MOV D,A", 1),
            Opcode::MOV_E_B => OpcodeInfo::new("MOV E,B", 1),
            Opcode::MOV_E_C => OpcodeInfo::new("MOV E,C", 1),
            Opcode::MOV_E_D => OpcodeInfo::new("MOV E,D", 1),
            Opcode::MOV_E_E => OpcodeInfo::new("MOV E,E", 1),
            Opcode::MOV_E_H => OpcodeInfo::new("MOV E,H", 1),
            Opcode::MOV_E_L => OpcodeInfo::new("MOV E,L", 1),
            Opcode::MOV_E_M => OpcodeInfo::new("MOV E,M", 1),
            Opcode::MOV_E_A => OpcodeInfo::new("MOV E,A", 1),
            Opcode::MOV_H_B => OpcodeInfo::new("MOV H,B", 1),
            Opcode::MOV_H_C => OpcodeInfo::new("MOV H,C", 1),
            Opcode::MOV_H_D => OpcodeInfo::new("MOV H,D", 1),
            Opcode::MOV_H_E => OpcodeInfo::new("MOV H,E", 1),
            Opcode::MOV_H_H => OpcodeInfo::new("MOV H,H", 1),
            Opcode::MOV_H_L => OpcodeInfo::new("MOV H,L", 1),
            Opcode::MOV_H_M => OpcodeInfo::new("MOV H,M", 1),
            Opcode::MOV_H_A => OpcodeInfo::new("MOV H,A", 1),
            Opcode::MOV_L_B => OpcodeInfo::new("MOV L,B", 1),
            Opcode::MOV_L_C => OpcodeInfo::new("MOV L,C", 1),
            Opcode::MOV_L_D => OpcodeInfo::new("MOV L,D", 1),
            Opcode::MOV_L_E => OpcodeInfo::new("MOV L,E", 1),
            Opcode::MOV_L_H => OpcodeInfo::new("MOV L,H", 1),
            Opcode::MOV_L_L => OpcodeInfo::new("MOV L,L", 1),
            Opcode::MOV_L_M => OpcodeInfo::new("MOV L,M", 1),
            Opcode::MOV_L_A => OpcodeInfo::new("MOV L,A", 1),
            Opcode::MOV_M_B => OpcodeInfo::new("MOV M,B", 1),
            Opcode::MOV_M_C => OpcodeInfo::new("MOV M,C", 1),
            Opcode::MOV_M_D => OpcodeInfo::new("MOV M,D", 1),
            Opcode::MOV_M_E => OpcodeInfo::new("MOV M,E", 1),
            Opcode::MOV_M_H => OpcodeInfo::new("MOV M,H", 1),
            Opcode::MOV_M_L => OpcodeInfo::new("MOV M,L", 1),
            Opcode::HLT => OpcodeInfo::new("HLT", 1),
            Opcode::MOV_M_A => OpcodeInfo::new("MOV M,A", 1),
            Opcode::MOV_A_B => OpcodeInfo::new("MOV A,B", 1),
            Opcode::MOV_A_C => OpcodeInfo::new("MOV A,C", 1),
            Opcode::MOV_A_D => OpcodeInfo::new("MOV A,D", 1),
            Opcode::MOV_A_E => OpcodeInfo::new("MOV A,E", 1),
            Opcode::MOV_A_H => OpcodeInfo::new("MOV A,H", 1),
            Opcode::MOV_A_L => OpcodeInfo::new("MOV A,L", 1),
            Opcode::MOV_A_M => OpcodeInfo::new("MOV A,M", 1),
            Opcode::MOV_A_A => OpcodeInfo::new("MOV A,A", 1),
            Opcode::ADD_B => OpcodeInfo::new("ADD B", 1),
            Opcode::ADD_C => OpcodeInfo::new("ADD C", 1),
            Opcode::ADD_D => OpcodeInfo::new("ADD D", 1),
            Opcode::ADD_E => OpcodeInfo::new("ADD E", 1),
            Opcode::ADD_H => OpcodeInfo::new("ADD H", 1),
            Opcode::ADD_L => OpcodeInfo::new("ADD L", 1),
            Opcode::ADD_M => OpcodeInfo::new("ADD M", 1),
            Opcode::ADD_A => OpcodeInfo::new("ADD A", 1),
            Opcode::ADC_B => OpcodeInfo::new("ADC B", 1),
            Opcode::ADC_C => OpcodeInfo::new("ADC C", 1),
            Opcode::ADC_D => OpcodeInfo::new("ADC D", 1),
            Opcode::ADC_E => OpcodeInfo::new("ADC E", 1),
            Opcode::ADC_H => OpcodeInfo::new("ADC H", 1),
            Opcode::ADC_L => OpcodeInfo::new("ADC L", 1),
            Opcode::ADC_M => OpcodeInfo::new("ADC M", 1),
            Opcode::ADC_A => OpcodeInfo::new("ADC A", 1),
            Opcode::SUB_B => OpcodeInfo::new("SUB B", 1),
            Opcode::SUB_C => OpcodeInfo::new("SUB C", 1),
            Opcode::SUB_D => OpcodeInfo::new("SUB D", 1),
            Opcode::SUB_E => OpcodeInfo::new("SUB E", 1),
            Opcode::SUB_H => OpcodeInfo::new("SUB H", 1),
            Opcode::SUB_L => OpcodeInfo::new("SUB L", 1),
            Opcode::SUB_M => OpcodeInfo::new("SUB M", 1),
            Opcode::SUB_A => OpcodeInfo::new("SUB A", 1),
            Opcode::SBB_B => OpcodeInfo::new("SBB B", 1),
            Opcode::SBB_C => OpcodeInfo::new("SBB C", 1),
            Opcode::SBB_D => OpcodeInfo::new("SBB D", 1),
            Opcode::SBB_E => OpcodeInfo::new("SBB E", 1),
            Opcode::SBB_H => OpcodeInfo::new("SBB H", 1),
            Opcode::SBB_L => OpcodeInfo::new("SBB L", 1),
            Opcode::SBB_M => OpcodeInfo::new("SBB M", 1),
            Opcode::SBB_A => OpcodeInfo::new("SBB A", 1),
            Opcode::ANA_B => OpcodeInfo::new("ANA B", 1),
            Opcode::ANA_C => OpcodeInfo::new("ANA C", 1),
            Opcode::ANA_D => OpcodeInfo::new("ANA D", 1),
            Opcode::ANA_E => OpcodeInfo::new("ANA E", 1),
            Opcode::ANA_H => OpcodeInfo::new("ANA H", 1),
            Opcode::ANA_L => OpcodeInfo::new("ANA L", 1),
            Opcode::ANA_M => OpcodeInfo::new("ANA M", 1),
            Opcode::ANA_A => OpcodeInfo::new("ANA A", 1),
            Opcode::XRA_B => OpcodeInfo::new("XRA B", 1),
            Opcode::XRA_C => OpcodeInfo::new("XRA C", 1),
            Opcode::XRA_D => OpcodeInfo::new("XRA D", 1),
            Opcode::XRA_E => OpcodeInfo::new("XRA E", 1),
            Opcode::XRA_H => OpcodeInfo::new("XRA H", 1),
            Opcode::XRA_L => OpcodeInfo::new("XRA L", 1),
            Opcode::XRA_M => OpcodeInfo::new("XRA M", 1),
            Opcode::XRA_A => OpcodeInfo::new("XRA A", 1),
            Opcode::ORA_B => OpcodeInfo::new("ORA B", 1),
            Opcode::ORA_C => OpcodeInfo::new("ORA C", 1),
            Opcode::ORA_D => OpcodeInfo::new("ORA D", 1),
            Opcode::ORA_E => OpcodeInfo::new("ORA E", 1),
            Opcode::ORA_H => OpcodeInfo::new("ORA H", 1),
            Opcode::ORA_L => OpcodeInfo::new("ORA L", 1),
            Opcode::ORA_M => OpcodeInfo::new("ORA M", 1),
            Opcode::ORA_A => OpcodeInfo::new("ORA A", 1),
            Opcode::CMP_B => OpcodeInfo::new("CMP B", 1),
            Opcode::CMP_C => OpcodeInfo::new("CMP C", 1),
            Opcode::CMP_D => OpcodeInfo::new("CMP D", 1),
            Opcode::CMP_E => OpcodeInfo::new("CMP E", 1),
            Opcode::CMP_H => OpcodeInfo::new("CMP H", 1),
            Opcode::CMP_L => OpcodeInfo::new("CMP L", 1),
            Opcode::CMP_M => OpcodeInfo::new("CMP M", 1),
            Opcode::CMP_A => OpcodeInfo::new("CMP A", 1),
            Opcode::RNZ => OpcodeInfo::new("RNZ", 1),
            Opcode::POP_B => OpcodeInfo::new("POP B", 1),
            Opcode::JNZ => OpcodeInfo::new("JNZ ", 3),
            Opcode::JMP => OpcodeInfo::new("JMP ", 3),
            Opcode::CNZ => OpcodeInfo::new("CNZ ", 3),
            Opcode::PUSH_B => OpcodeInfo::new("PUSH B", 1),
            Opcode::ADI => OpcodeInfo::new("ADI ", 2),
            Opcode::RST_0 => OpcodeInfo::new("RST 0", 1),
            Opcode::RZ => OpcodeInfo::new("RZ", 1),
            Opcode::RET => OpcodeInfo::new("RET", 1),
            Opcode::JZ => OpcodeInfo::new("JZ ", 3),
            Opcode::UNDEF_8 => OpcodeInfo::new("UNDEF 8", 1),
            Opcode::CZ => OpcodeInfo::new("CZ ", 3),
            Opcode::CALL => OpcodeInfo::new("CALL ", 3),
            Opcode::ACI => OpcodeInfo::new("ACI ", 2),
            Opcode::RST_1 => OpcodeInfo::new("RST 1", 1),
            Opcode::RNC => OpcodeInfo::new("RNC", 1),
            Opcode::POP_D => OpcodeInfo::new("POP D", 1),
            Opcode::JNC => OpcodeInfo::new("JNC ", 3),
            Opcode::OUTP => OpcodeInfo::new("OUT ", 2),
            Opcode::CNC => OpcodeInfo::new("CNC ", 3),
            Opcode::PUSH_D => OpcodeInfo::new("PUSH D", 1),
            Opcode::SUI => OpcodeInfo::new("SUI ", 2),
            Opcode::RST_2 => OpcodeInfo::new("RST 2", 1),
            Opcode::RC => OpcodeInfo::new("RC", 1),
            Opcode::UNDEF_9 => OpcodeInfo::new("UNDEF 9", 1),
            Opcode::JC => OpcodeInfo::new("JC ", 3),
            Opcode::INP => OpcodeInfo::new("IN ", 2),
            Opcode::CC => OpcodeInfo::new("CC ", 3),
            Opcode::UNDEF_10 => OpcodeInfo::new("UNDEF 10", 1),
            Opcode::SBI => OpcodeInfo::new("SBI ", 2),
            Opcode::RST_3 => OpcodeInfo::new("RST 3", 1),
            Opcode::RPO => OpcodeInfo::new("RPO", 1),
            Opcode::POP_H => OpcodeInfo::new("POP H", 1),
            Opcode::JPO => OpcodeInfo::new("JPO ", 3),
            Opcode::XTHL => OpcodeInfo::new("XTHL", 1),
            Opcode::CPO => OpcodeInfo::new("CPO ", 3),
            Opcode::PUSH_H => OpcodeInfo::new("PUSH H", 1),
            Opcode::ANI => OpcodeInfo::new("ANI ", 2),
            Opcode::RST_4 => OpcodeInfo::new("RST 4", 1),
            Opcode::RPE => OpcodeInfo::new("RPE", 1),
            Opcode::PCHL => OpcodeInfo::new("PCHL", 1),
            Opcode::JPE => OpcodeInfo::new("JPE ", 3),
            Opcode::XCHG => OpcodeInfo::new("XCHG", 1),
            Opcode::CPE => OpcodeInfo::new("CPE ", 3),
            Opcode::UNDEF_11 => OpcodeInfo::new("UNDEF 11", 1),
            Opcode::XRI => OpcodeInfo::new("XRI ", 2),
            Opcode::RST_5 => OpcodeInfo::new("RST 5", 1),
            Opcode::RP => OpcodeInfo::new("RP", 1),
            Opcode::POP_PSW => OpcodeInfo::new("POP PSW", 1),
            Opcode::JP => OpcodeInfo::new("JP ", 3),
            Opcode::DI => OpcodeInfo::new("DI", 1),
            Opcode::CP => OpcodeInfo::new("CP ", 3),
            Opcode::PUSH_PSW => OpcodeInfo::new("PUSH PSW", 1),
            Opcode::ORI => OpcodeInfo::new("ORI ", 2),
            Opcode::RST_6 => OpcodeInfo::new("RST 6", 1),
            Opcode::RM => OpcodeInfo::new("RM", 1),
            Opcode::SPHL => OpcodeInfo::new("SPHL", 1),
            Opcode::JM => OpcodeInfo::new("JM ", 3),
            Opcode::EI => OpcodeInfo::new("EI", 1),
            Opcode::CM => OpcodeInfo::new("CM ", 3),
            Opcode::UNDEF_12 => OpcodeInfo::new("UNDEF 12", 1),
            Opcode::CPI => OpcodeInfo::new("CPI ", 2),
            Opcode::RST_7 => OpcodeInfo::new("RST 7", 1),
        }
    }
}
